stages:
  - lint
  - test
  - docker-base
  - docker
  - deploy
  - deploy_github
  - dockerhub


lint:
  image: gitlab.cloudcix.com:5005/utils/ci/lint
  stage: lint
  script:
    - flake8
  except:
    - master
    - stable

mypy:
  image: python:3.7
  stage: lint
  script:
    - pip3 install 'mypy<0.800'
    - mypy --ignore-missing-imports builders dispatchers metrics quiescers restarters scrubbers tasks updaters celery_app.py cloudcix_token.py email_notifier.py robot.py state.py utils.py
  except:
    - master
    - stable

###############################################################################
#                         Base Containers                                     #
###############################################################################
opensource_base:
  stage: docker-base
  tags:
    - docker-build
  script:
    - docker build -f deployment/docker/opensource/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/opensource-base --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/opensource-base
  only:
    - stable

# Will be deployed to docker hub for our use in our Delta COP/Region POD
delta_base:
    stage: docker-base
    tags:
      - docker-build
    script:
      - docker build -f deployment/docker/opensource/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/delta --no-cache .
      - docker push gitlab.cloudcix.com:5005/cloudcix/robot/delta
    when: manual
    except:
      - stable

# dev_test_base:
#  stage: docker-base
#  tags:
#    - docker-build
#  before_script:
#    - echo "$GITLAB_KEY" > id_rsa
#  script:
#    - docker build -f deployment/docker/dev/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/dev-test-base --no-cache .
#    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/dev-test-base
#  when:
#    manual
#  except:
#    - master
#    - stable
#
# dev_base:
#  stage: docker-base
#  tags:
#    - docker-build
#  before_script:
#    - echo "$GITLAB_KEY" > id_rsa
#  script:
#    - docker build -f deployment/docker/dev/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/dev-base --no-cache .
#    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/dev-base
#  only:
#    - master

stable_base:
  stage: docker-base
  tags:
    - docker-build
  before_script:
    - echo "$GITLAB_KEY" > id_rsa
  script:
    - docker build -f deployment/docker/stable/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/stable-base --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/stable-base
  only:
    - stable

###############################################################################
#                           Dev Test Build and Deploy                              #
###############################################################################
# alpha_test_image:
#  stage: docker
#  tags:
#    - docker-build
#  script:
#    - docker build -f deployment/docker/dev/alpha-test.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/alpha-test --no-cache .
#    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/alpha-test
#  when:
#    manual
#  except:
#    - master
#    - stable

# deploy_alpha_test:
#  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
#  before_script:
#    - cp ~/.ssh/application_framework/stage_key ~/.ssh/id_rsa
#    - cp ~/.ssh/application_framework/stage_key.pub ~/.ssh/id_rsa.pub
#  stage: deploy
#  script:
#    - ansible-playbook -i deployment/hosts/alpha.yml deployment/playbook.yml --extra-vars="deployment_host=alpha"
#    - ansible-playbook -i deployment/hosts/alpha.yml deployment/worker-playbook.yml --extra-vars="deployment_host=alpha-worker0"
#  when:
#    manual
#  except:
#    - master
#    - stable

###############################################################################
#                           Dev Build and Deploy                              #
###############################################################################
# alpha_image:
#  stage: docker
#  tags:
#    - docker-build
#  script:
#    - docker build -f deployment/docker/dev/alpha.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/alpha --no-cache .
#    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/alpha
#  only:
#  - master

# deploy_alpha:
#  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
#  before_script:
#    - cp ~/.ssh/application_framework/stage_key ~/.ssh/id_rsa
#    - cp ~/.ssh/application_framework/stage_key.pub ~/.ssh/id_rsa.pub
#  stage: deploy
#  script:
#    - ansible-playbook -i deployment/hosts/alpha.yml deployment/playbook.yml --extra-vars="deployment_host=alpha"
#    - ansible-playbook -i deployment/hosts/alpha.yml deployment/worker-playbook.yml --extra-vars="deployment_host=alpha-worker0"
#  only:
#    - master


###############################################################################
#                         Production Build and Deploy                         #
###############################################################################
cork01_image:
  stage: docker
  tags:
  - docker-build
  script:
  - docker build -f deployment/docker/stable/cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/cork01
  only:
  - stable

deploy_cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/playbook.yml --extra-vars="deployment_host=cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=cork01-worker0"
  only:
    - stable


nti-cork01_image:
  stage: docker
  tags:
  - docker-build
  script:
  - docker build -f deployment/docker/stable/nti-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01
  only:
  - stable

deploy_nti-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=nti-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=nti-cork01-worker0"
  only:
    - stable


netsoc-cork01_image:
  stage: docker
  tags:
  - docker-build
  script:
  - docker build -f deployment/docker/stable/netsoc-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/netsoc-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/netsoc-cork01
  only:
  - stable

deploy_netsoc-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/netsoc-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=netsoc-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/netsoc-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=netsoc-cork01-worker0"
  only:
    - stable


vodafone-cork01_image:
  stage: docker
  tags:
  - docker-build
  script:
  - docker build -f deployment/docker/stable/vodafone-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/vodafone-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/vodafone-cork01
  only:
  - stable

deploy_vodafone-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/vodafone-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=vodafone-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/vodafone-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=vodafone-cork01-worker0"
  only:
    - stable


vmotion-cork01_image:
  stage: docker
  tags:
  - docker-build
  script:
  - docker build -f deployment/docker/stable/vmotion-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/vmotion-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/vmotion-cork01
  only:
  - stable

deploy_vmotion-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/vmotion-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=vmotion-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/vmotion-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=vmotion-cork01-worker0"
  only:
    - stable

###############################################################################
#                         Github and Dockerhub Deploy                         #
###############################################################################
deploy_github:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy_github
  script:
    - /bin/bash deployment/github_deploy.sh
  only:
    - stable

opersource_dockerhub:
  stage: dockerhub
  tags:
    - docker-build
  script:
    - ./deployment/docker/publish/opensource.sh
  when: manual
  only:
    - stable

delta_dockerhub:
  stage: dockerhub
  tags:
    - docker-build
  script:
    - ./deployment/docker/publish/delta.sh
  when: manual
  except:
    - stable