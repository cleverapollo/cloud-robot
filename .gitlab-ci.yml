stages:
  - lint
  - test
  - base
  - build
  - deploy

lint:
  image: gitlab.cloudcix.com:5005/utils/ci/lint
  stage: lint
  script:
    - flake8
  except:
    - master
    - stable

mypy:
  image: python:3.7
  stage: lint
  script:
    - pip3 install mypy
    - mypy --ignore-missing-imports builders dispatchers metrics quiescers restarters scrubbers tasks updaters celery_app.py cloudcix_token.py email_notifier.py robot.py state.py utils.py
  except:
    - master
    - stable


stage_base:
  stage: base
  tags:
    - docker-build
  before_script:
    - echo "$GITLAB_KEY" > id_rsa
  script:
    - docker build -f deployment/dockerfiles/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/base:stage --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/base:stage
  only:
    - master


build_alpha:
  stage: build
  tags:
    - docker-build
  script:
    - docker build -f deployment/dockerfiles/alpha.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/alpha --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/alpha
  only:
  - master

deploy_alpha:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/stage_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/stage_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    - ansible-playbook -i deployment/hosts/alpha.yml deployment/playbook.yml --extra-vars="deployment_host=alpha"
    - ansible-playbook -i deployment/hosts/alpha.yml deployment/worker-playbook.yml --extra-vars="deployment_host=alpha-worker0"
  only:
    - master

###############################################################################
#                         Production Build and Deploy                         #
###############################################################################

stable_base:
  stage: base
  tags:
    - docker-build
  before_script:
    - echo "$GITLAB_KEY" > id_rsa
  script:
    - docker build -f deployment/dockerfiles/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/base:stable --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/base:stable
  only:
    - stable

build_cork01:
  stage: build
  tags:
  - docker-build
  script:
  - docker build -f deployment/dockerfiles/cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/cork01
  only:
  - stable

deploy_cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbear
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/playbook.yml --extra-vars="deployment_host=cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=cork01-worker0"
  only:
    - stable


build_nti-cork01:
  stage: build
  tags:
  - docker-build
  script:
  - docker build -f deployment/dockerfiles/nti-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01
  only:
  - stable

deploy_nti-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbear
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=nti-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=nti-cork01-worker0"
  only:
    - stable


build_netsoc-cork01:
  stage: build
  tags:
  - docker-build
  script:
  - docker build -f deployment/dockerfiles/netsoc-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/netsoc-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/netsoc-cork01
  only:
  - stable

deploy_netsoc-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbear
    - ansible-playbook -i deployment/hosts/netsoc-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=netsoc-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/netsoc-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=netsoc-cork01-worker0"
  only:
    - stable


build_vodafone-cork01:
  stage: build
  tags:
  - docker-build
  script:
  - docker build -f deployment/dockerfiles/vodafone-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/vodafone-cork01 --no-cache .
  - docker push gitlab.cloudcix.com:5005/cloudcix/robot/vodafone-cork01
  only:
  - stable

deploy_vodafone-cork01:
  image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
  before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
  stage: deploy
  script:
    # Deploy Heartbear
    - ansible-playbook -i deployment/hosts/vodafone-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=vodafone-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/vodafone-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=vodafone-cork01-worker0"
  only:
    - stable
