stages:
- lint
- test
- docker-base
- docker
- dockerhub
- deploy
- deploy_github
    

lint:
    image: gitlab.cloudcix.com:5005/utils/ci/lint
    stage: lint
    script:
    - flake8
    except:
    - master
    - stable

mypy:
    image: python:3.7
    stage: lint
    script:
    - pip3 install 'mypy<0.800'
    - mypy --ignore-missing-imports builders dispatchers metrics quiescers restarters scrubbers tasks updaters celery_app.py cloudcix_token.py email_notifier.py robot.py state.py utils.py
    except:
    - master
    - stable

###############################################################################
#                         Base Containers                                     #
###############################################################################
opensource_base:
    stage: docker-base
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/opensource/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/opensource-base --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/opensource-base
    only:
    - stable

# Will be deployed to docker hub for our use in our Delta COP/Region POD
delta_base:
    stage: docker-base
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/opensource/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/delta --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/delta
    when: manual
    except:
    - stable

# Will be deployed to docker hub for our use in our Delta COP/Region POD
devtest_base:
    stage: docker-base
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/opensource/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/devtest --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/devtest
    when: manual
    except:
    - stable

stable_base:
    stage: docker-base
    tags:
    - docker-build
    before_script:
    - echo "$GITLAB_KEY" > id_rsa
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/stable/base.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/stable-base --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/stable-base
    only:
    - stable


###############################################################################
#                         Production Build and Deploy                         #
###############################################################################

###############################################################################
#                        Cork01 Build and Deploy.                            #
###############################################################################
cork01_image:
    stage: docker
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/stable/cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/cork01 --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/cork01
    only:
    - stable

deploy_cork01:
    image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
    before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
    stage: deploy
    script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/playbook.yml --extra-vars="deployment_host=cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=cork01-worker0"
    only:
    - stable

###############################################################################
#                        NTI Build and Deploy.                                #
###############################################################################
nti-cork01_image:
    stage: docker
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/stable/nti-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01 --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/nti-cork01
    only:
    - stable

deploy_nti-cork01:
    image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
    before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
    stage: deploy
    script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=nti-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/nti-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=nti-cork01-worker0"
    only:
    - stable

###############################################################################
#                        VMotion Build and Deploy.                            #
###############################################################################
vmotion-cork01_image:
    stage: docker
    tags:
    - docker-build
    script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build -f deployment/docker/stable/vmotion-cork01.Dockerfile -t gitlab.cloudcix.com:5005/cloudcix/robot/vmotion-cork01 --no-cache .
    - docker push gitlab.cloudcix.com:5005/cloudcix/robot/vmotion-cork01
    only:
    - stable

deploy_vmotion-cork01:
    image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
    before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
    stage: deploy
    script:
    # Deploy Heartbeat
    - ansible-playbook -i deployment/hosts/vmotion-cork01.yml deployment/playbook.yml --extra-vars="deployment_host=vmotion-cork01"
    # Deploy workers
    - ansible-playbook -i deployment/hosts/vmotion-cork01.yml deployment/worker-playbook.yml --extra-vars="deployment_host=vmotion-cork01-worker0"
    only:
    - stable

###############################################################################
#                         Github and Dockerhub Deploy                         #
###############################################################################
deploy_github:
    image: gitlab.cloudcix.com:5005/cloudcix/deployment/image
    before_script:
    - cp ~/.ssh/application_framework/live_key ~/.ssh/id_rsa
    - cp ~/.ssh/application_framework/live_key.pub ~/.ssh/id_rsa.pub
    stage: deploy_github
    script:
    - /bin/bash deployment/github_deploy.sh
    when: manual
    only:
    - stable

opersource_dockerhub:
    stage: dockerhub
    tags:
    - docker-build
    script:
    - ./deployment/docker/publish/opensource.sh
    when: manual
    only:
    - stable

delta_dockerhub:
    stage: dockerhub
    tags:
    - docker-build
    script:
    - ./deployment/docker/publish/delta.sh
    when: manual
    except:
    - stable

devtest_dockerhub:
    stage: dockerhub
    tags:
    - docker-build
    script:
    - ./deployment/docker/publish/devtest.sh
    when: manual
    except:
    - stable

sast:
    stage: test
    
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/SAST-IaC.latest.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
