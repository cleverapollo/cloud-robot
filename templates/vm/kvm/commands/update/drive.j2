{
{# Drive changes #}
{% set drives = changes['storages'] %}
{% set number = 0 %}

{# a. Update Drive Sizes #}
{% for drive in drives %}
{% if int(drive['new_size']) > int(drive['old_size']) %}
  {# Expand the Drive #}
  {% set diff = int(drive['new_size']) - int(drive['old_size']) %}
  echo '{{ host_sudo_passwd }}' | sudo -S qemu-img resize {{ vms_path }}{{ vm_identifier }}_{{ storage_type }}_{{ drive['id'] }}.img +{{ diff }}G
{% elif int(drive['new_size']) == 0 %}
  {# Delete the Drive #}
  echo '{{ host_sudo_passwd }}' | sudo -S rm -rf {{ vms_path }}{{ vm_identifier }}_{{ storage_type }}_{{ drive['id'] }}.img
  {% elif drive['old_size'] is in ['0', None, ''] %}
  {# Create a new Drive #}
  {% set number = number + 1 %}
  echo '{{ host_sudo_passwd }}' | sudo -S qemu-img create -f qcow2 {{ vms_path }}{{ vm_identifier }}_{{ storage_type }}_{{ drive['id'] }}.img {{ drive['new_size'] }}G
{% endif %}
{% endfor %}

{# b. Generate correct names for the new drives to mount them on the VM #}
{% set drive_point = 96 + total_drives - number %}
{% for drive in drives if drive['old_size'] is in ['0', None, ''] %}
{% set alphabet = chr(drive_point + (loop.index0 + 1)) %}
echo '{{ host_sudo_passwd }}' | sudo -S virsh attach-disk {{ vm_identifier }} \
--source {{ vms_path }}{{ vm_identifier }}_{{ storage_type }}_{{ drive['id'] }}.img \
--target vd{{ alphabet }}
{% endfor %}

}
